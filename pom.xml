<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.init.mini</groupId>
    <artifactId>mini-server</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!--框架版本统一控制-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.12</junit.version>
        <mini-common.version>1.0-SNAPSHOT</mini-common.version>
        <spring-cloud-dependencies.version>Hoxton.SR7</spring-cloud-dependencies.version>
        <spring-boot-dependencies.version>2.3.2.RELEASE</spring-boot-dependencies.version>
        <fastjson.version>1.2.70</fastjson.version>
        <mybatis-spring-boot-starter.version>2.1.0</mybatis-spring-boot-starter.version>
        <mysql-connector-java.version>8.0.22</mysql-connector-java.version>
        <druid.version>1.1.0</druid.version>
        <aspectjweaver.version>1.8.13</aspectjweaver.version>
        <spring-boot-starter-data-redis.version>2.3.2.RELEASE</spring-boot-starter-data-redis.version>
        <hystrix.version>1.5.18</hystrix.version>
        <spring-cloud-starter-config.version>2.2.4.RELEASE</spring-cloud-starter-config.version>
    </properties>

    <!--
        1.继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析
        2.而是当子项目声明一个依赖（必须描述group ID和 artifact
        ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖
     -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.init.mini.common</groupId>
                <artifactId>mini-common</artifactId>
                <version>${mini-common.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud-dependencies.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!--
            1.常用
                a.String JSON.toJSONString(),将对象转为 String
                b.标签：@JSONFiled 标识对象属性，name 指定序列化别名，
                        serialize 指定是否序列化，ordinal 指定顺序，
                        format 指定日期格式
                c.BeanToArray 序列化功能
                    JSON.toJSONString(listOfPersons, SerializerFeature.BeanToArray),
                    得到的结果为对象的属性值数组[]
                d.JSON 对象：使用 JSONObject（fastJson提供的json对象） 和 JSONArray（fastJson提供json数组对象）
                    JSONObject对象当成一个 Map，JSONArray对象当做 List<JSONObject>
                e.反序列化：JSON.parseObject,必须要有默认无参的构造函数
            -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${spring-cloud-starter-config.version}</version>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>mini-server</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>

        </plugins>
    </build>

    <modules>
        <module>mini-web</module>
        <module>mini-func</module>
        <module>mini-common</module>
        <module>mini-gateway</module>
        <module>mini-config</module>
        <module>mini-db</module>
    </modules>
</project>

