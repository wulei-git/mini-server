server.port=9001
spring.application.name=mini-web

#Eureka
#false表示不向注册中心注册自己。
eureka.client.register-with-eureka=false
eureka.client.service-url.defaultZone=http://127.0.0.1:7001/eureka/

management.endpoints.web.exposure.include=refresh,health

#Mybatis
spring.datasource.username=root
spring.datasource.password=root
#注意开启开始数据库预编译和缓存
spring.datasource.url=jdbc:mysql://localhost:3306/jeesite?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#线程池group01
thread-pool.threadNamePrefix=thread-pool-group01-
thread-pool.corePoolSize=8
thread-pool.maxPoolSize=50
thread-pool.keepAliveSeconds=30
thread-pool.queueCapacity=300
#当调度器 shutdown 被调用时是否等待当前任务完成
thread-pool.shutdown-wait-complete=true
#拒绝策略
#1 AbortPolicy:直接抛出个RejectedExecutionException异常，也不执行这个任务
#2 CallerRunsPolicy在任务被拒绝添加后，会用调用execute函数的上层线程去执行被拒绝的任务。
#3 DiscardPolicy:会让被线程池拒绝的任务直接抛弃，不会抛异常也不会执行。
#4 DiscardOldestPolicy:会抛弃任务队列中最旧的任务也就是最先加入队列的，再把这个新任务添加进去。
#5 自定义拒绝策略:MyRejectedExecutionHandler implements RejectedExecutionHandler
thread-pool.rejectedPolicy=java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy

#redis
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000







